#!/usr/bin/python
# coding=utf-8

# Base Python File (tstat.py)
# Created: Mon 06 Apr 2015 10:29:49 PM CEST
# Version: 1.0
#
# This Python script was developped by François-Xavier Thomas.
# You are free to copy, adapt or modify it.
# If you do so, however, leave my name somewhere in the credits, I'd appreciate it ;)
#
# (ɔ) François-Xavier Thomas <fx.thomas@gmail.com>

import argparse
parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument("classes", help="classes to display", nargs="*")
parser.add_argument("--interface", "-i", help="network interface to use", default="enp3s0")
parser.add_argument("--raw", "-r", help="print raw sent bytes", action="store_true")
args = parser.parse_args()


import subprocess as sp
import re


class QDiscStat(object):
    def __init__(self):
        self.lines = []

    def add(self, l):
        self.lines.append(l.strip())

    @property
    def sent_bytes(self):
        return int(re.match(r"Sent (\d+) bytes", self.lines[1]).group(1))

    @property
    def sent_pkts(self):
        return int(re.match(r"Sent \d+ bytes (\d+) pkt", self.lines[1]).group(1))

    @property
    def dropped_pkts(self):
        return int(re.match(r"Sent \d+ bytes \d+pkt (dropped (\d+)", self.lines[1]).group(1))

    @property
    def class_type(self):
        return next(re.finditer(r"class (\w+)", self.lines[0])).group(1)

    @property
    def class_name(self):
        return next(re.finditer(r"class \w+ ([\w:]+)", self.lines[0])).group(1)


tcstat = sp.check_output(["tc", "-s", "class", "ls", "dev", args.interface]).decode("utf-8")
stats = []
for line in tcstat.split("\n"):
    if not line.strip():
        continue
    if not line.startswith(" "):
        stats.append(QDiscStat())
    stats[-1].add(line)
if args.classes:
    stats = [s for s in stats if s.class_name in args.classes]
for s in stats:
    if args.raw:
        print(s.sent_bytes)
    else:
        print("{} {} {}".format(s.class_type, s.class_name, s.sent_bytes))
